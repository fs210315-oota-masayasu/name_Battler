apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt' // Kotlinでアノテーション処理をできるようになる

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.namebattler"
        minSdkVersion 20
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())

        main {
            res.srcDirs =
                    [
                            'src/main/res/layouts/battles',
                            'src/main/res/layouts',
                            'src/main/res'

                    ]
        }
    }
}


androidExtensions {
    defaultCacheImplementation = "SPARSE_ARRAY" // HASH_MAP (default), SPARSE_ARRAY, or NONE
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha03'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha01'

// Room components
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"

// Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.archLifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.archLifecycleVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.androidxArchVersion"

// ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.archLifecycleVersion"

// Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"

// UI
    implementation "com.google.android.material:material:$rootProject.materialVersion"

// Testing
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
}

//    def coroutines_version = '1.1.1' //kotlinコルーチン用ライブラリ(async, await)のバージョン
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0"
//    //kotlinコルーチン用ライブラリ(async, await)
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0"
//    //kotlinコルーチン用ライブラリ(async, await)
//
//
//    implementation 'com.google.code.gson:gson:2.8.6'
//    // Roomを使えるようにするための追加
//    def room_version = "2.2.3"
//
//    implementation "androidx.room:room-runtime:$room_version"
//    kapt "androidx.room:room-compiler:$room_version"
//    // For Kotlin use kapt instead of annotationProcessor
//
//    // optional - Kotlin Extensions and Coroutines support for Room
//    //implementation "androidx.room:room-ktx:$room_version"
//
//    // optional - RxJava support for Room
//    //implementation "androidx.room:room-rxjava2:$room_version"
//
//    // optional - Guava support for Room, including Optional and ListenableFuture
//    //implementation "androidx.room:room-guava:${room_version}"
//
//    // Test helpers
//    //testImplementation "androidx.room:room-testing:$room_version"
//
//    // life cycle dependencies
//    def lifecycle_version = "2.0.0"
//    implementation "android.arch.lifecycle:extensions:1.1.1"
//    kapt "android.arch.lifecycle:compiler:1.1.1"
//
//    implementation "android.arch.persistence.room:runtime:$room_version"
//    kapt "android.arch.persistence.room:compiler:$room_version"
//    implementation "android.arch.paging:runtime:1.0.0"
//}

